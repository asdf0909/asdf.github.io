Q 1) Using python find the correct root of the function x5+3x+1, in [-2,0] using Newton Raphson Method    correct up to 4 decimal places.

def newtonRaphson(f,g,x0,e):
    step =1
    condition=True
    while condition:
        if g(x0)==0.0:
            print('Divided by zero error!')
            break
        x1=x0-(f(x0)/g(x0))
        print('Iteration=',step,'x1=',x1,'and f(x1)=',f(x1))
        x0=x1
        step=step+1
        condition=abs(f(x1))>e
    print('required root is',x1)
from math import*
def f(x):
    return x**5+3*x+1
def g(x):
    return 5*x**4+3
newtonRaphson(f,g,-1,0.00001)

Q 1) Using python find the correct root of the function ex – 3x , in [0,1] using Regula Falsi Method    correct up to 4 decimal places.
def falseposition(f,x0,x1,e):
    if(f(x0)*f(x1))> 0.0:
        print('givenguess values do not bracker the root')
        print('try again with different guess values')
    else:
        step = 1
        condition = True
        while condition:
            x2=x0 - (x1-x0)*f(x0)/(f(x1) - f(x0))
            print('Iteration =',step,'x2=',x2,'and f(x2)=',f(x2))
            if (f(x0)*f(x2))>0:
                x1=x2
            else:
                x0=x2
            step = step+1
            condition=abs(f(x2))>e
            print('Required root is:',x2)
from math import*
def f(x):
    return exp(x) - 3*x
falseposition(f,0,1,0.00001)


Q3) Write a python program to estimate the value of the integral  using Simpson,s (1/3)rd rule.
def simpson13(f,a,b,n):
    h=(b-a)/n
    result = f(a) + f(b)
    for i in range (1,n):
        k=a+i*h
        if i%2 ==0:
            result = result + 2*f(k)
        else:
            result = result + 2*f(k)
            result = (h/3)*result
            return result
from math import*
def f(x):
    return x*exp(x)
simpson13(f,0,10,8)


Q4) Write a python program to estimate the value of the integral  using Trapezoidal rule (1/3)rd rule.where f(x) = sinx.on interval [0,2π] with h= π/4.
Soln: n= 8 intervals


def trapezoidal(f,a,b,n):
    h=float(b-a)/n
    result = f(a) + f(b)
    for i in range (1,n):
        result = result + 2*f(a+i*h)
        result = (h/2)*result
        return (result)
from math import*
def f(x):
    return (sin(x))
trapezoidal(f,0,2*pi,8)
